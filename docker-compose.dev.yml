version: '3'
services:
    mongo:
        image: mongo:latest
        environment: 
            MONGO_INITDB_ROOT_USERNAME: check-that
            MONGO_INITDB_ROOT_PASSWORD: check-that
            MONGO_INITDB_DATABASE: check-that
        ports:
            - 27017
        volumes:
            - mongo:/data/db
        logging: 
            driver: "none"
    app:
        image: check-that:latest
        build:
            context: ./
            target: builder
        environment: 
            PORT: '8000'
            MONGO_URI: mongodb://check-that:check-that@mongo:27017/check-that?authSource=admin
            KAFKA_BROKER: kafka:9092
        ports:
            - 8000:8000
        command: npm run start:dev
        volumes:
            - ./src:/app/src
        depends_on: 
            - kafka
            - mongo
    consumer:
        image: check-that:latest
        deploy:
            replicas: 2
        build:
            context: ./
            target: builder
        environment: 
            PORT: '8000'
            MONGO_URI: mongodb://check-that:check-that@mongo:27017/check-that?authSource=admin
            KAFKA_BROKER: kafka:9092
        command: npm run start:kafka:dev
        volumes:
            - ./src:/app/src
        depends_on: 
            - kafka
            - mongo
    zookeeper:
        image: 'docker.io/bitnami/zookeeper:3-debian-10'
        volumes:
            - zookeeper:/bitnami
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes
        logging: 
            driver: "none"
    kafka:
        image: 'docker.io/bitnami/kafka:2-debian-10'
        volumes:
            - kafka:/bitnami
        environment:
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
            - ALLOW_PLAINTEXT_LISTENER=yes
        depends_on:
            - zookeeper
        logging: 
            driver: "none"
volumes:
    mongo:
    zookeeper:
    kafka: